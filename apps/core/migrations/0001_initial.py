# Generated by Django 4.2.17 on 2024-12-29 14:32

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('investor', 'Investor'), ('startup', 'Startup'), ('individual', 'Individual')], default='individual', max_length=20)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('bio', models.TextField(blank=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profiles/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='StartupProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255)),
                ('tagline', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('industry', models.CharField(max_length=100)),
                ('stage', models.CharField(choices=[('idea', 'Idea Stage'), ('mvp', 'MVP'), ('seed', 'Seed'), ('series_a', 'Series A'), ('series_b', 'Series B'), ('series_c', 'Series C'), ('growth', 'Growth')], max_length=20)),
                ('founding_date', models.DateField()),
                ('location', models.CharField(max_length=255)),
                ('team_size', models.PositiveIntegerField()),
                ('revenue_range', models.CharField(choices=[('pre_revenue', 'Pre-revenue'), ('0-100k', '$0 - $100k'), ('100k-500k', '$100k - $500k'), ('500k-1m', '$500k - $1M'), ('1m-5m', '$1M - $5M'), ('5m+', '$5M+')], default='pre_revenue', max_length=20)),
                ('website', models.URLField(blank=True)),
                ('linkedin_url', models.URLField(blank=True)),
                ('crunchbase_url', models.URLField(blank=True)),
                ('pitch_deck', models.FileField(blank=True, null=True, upload_to='pitch_decks/')),
                ('total_funding_raised', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('current_funding_target', models.DecimalField(decimal_places=2, max_digits=15)),
                ('min_ticket_size', models.DecimalField(decimal_places=2, max_digits=15)),
                ('equity_offering', models.DecimalField(decimal_places=2, help_text='Percentage', max_digits=5)),
                ('key_metrics', models.JSONField(blank=True, default=dict, help_text='Key performance metrics')),
                ('verified', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='startup_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Startup Profile',
                'verbose_name_plural': 'Startup Profiles',
            },
        ),
        migrations.CreateModel(
            name='InvestorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('website', models.URLField(blank=True)),
                ('location', models.CharField(max_length=255)),
                ('founded_year', models.PositiveIntegerField()),
                ('team_size', models.PositiveIntegerField()),
                ('preferred_industries', models.JSONField(blank=True, default=list)),
                ('preferred_stages', models.JSONField(choices=[('seed', 'Seed'), ('series_a', 'Series A'), ('series_b', 'Series B'), ('series_c', 'Series C'), ('growth', 'Growth'), ('any', 'Any Stage')], default=list)),
                ('investment_range_min', models.DecimalField(decimal_places=2, max_digits=15)),
                ('investment_range_max', models.DecimalField(decimal_places=2, max_digits=15)),
                ('sectors_of_interest', models.JSONField(default=list)),
                ('total_investments', models.PositiveIntegerField(default=0)),
                ('total_capital_deployed', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('verified', models.BooleanField(default=False)),
                ('linkedin_url', models.URLField(blank=True)),
                ('crunchbase_url', models.URLField(blank=True)),
                ('portfolio_companies', models.ManyToManyField(blank=True, related_name='investors', to='core.startupprofile')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='investor_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Investor Profile',
                'verbose_name_plural': 'Investor Profiles',
            },
        ),
        migrations.CreateModel(
            name='IndividualProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('company', models.CharField(blank=True, max_length=255)),
                ('interests', models.JSONField(blank=True, default=list)),
                ('linkedin_url', models.URLField(blank=True)),
                ('verified', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='individual_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Individual Profile',
                'verbose_name_plural': 'Individual Profiles',
            },
        ),
        migrations.CreateModel(
            name='Deal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('deal_type', models.CharField(choices=[('equity', 'Equity'), ('convertible_note', 'Convertible Note'), ('safe', 'SAFE'), ('debt', 'Debt'), ('other', 'Other')], default='equity', max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('in_discussion', 'In Discussion'), ('due_diligence', 'Due Diligence'), ('closed', 'Closed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('equity_offered', models.DecimalField(decimal_places=2, help_text='Percentage', max_digits=5)),
                ('min_investment', models.DecimalField(decimal_places=2, max_digits=15)),
                ('target_close_date', models.DateField()),
                ('amount_raised', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('number_of_investors', models.PositiveIntegerField(default=0)),
                ('industry', models.CharField(max_length=100)),
                ('deal_documents', models.FileField(blank=True, null=True, upload_to='deal_documents/')),
                ('terms_and_conditions', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('committed_investors', models.ManyToManyField(blank=True, related_name='committed_deals', to='core.investorprofile')),
                ('interested_investors', models.ManyToManyField(blank=True, related_name='interested_deals', to='core.investorprofile')),
                ('startup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deals', to='core.startupprofile')),
            ],
        ),
    ]
